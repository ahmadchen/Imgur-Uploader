<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ImageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAAAIABCBAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAAwAAAAMAgGAAAAVwL5hwAAAAFz
        UkdCAK7OHOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAA7DAAAOwwHHb6hkAAAD10lEQVRoQ+2Zy09T
        QRSHUaMRDBpgR2RlIitMmjQKmhhFYEMQaIEWWopUJG15VCiP0pYCBcpDCC4UozExKoqiYuLCmGjighiM
        CMKf4+p4zlwvXHVuLy1zqYue5Nu1M9/vzjnTNk1LVapSFbMO/EfEVRlmu2PCG4pueUORpNMWHFktKCi4
        iF6HJL3YdajSbJ24NngL/jfy8vJOoZ/maRw1N7vWeQskG4PBeBX9Dkqa6pVhvu7e5C2QbIxGoxn9NNvo
        WCqATqQCJJtUgN3QMjwD/rsRmFvuhkefm2FhxQ4PP7VAdCEAHdMT0Bye4b5vN+gaoBmZXeqF5a1SeLNZ
        osrbzXLwzU1x19BCtwCu8WlYWqvkCqtx550HT4O/nhq6BCD5V+vlXEk+V7aZf++MK4QuAV58q1DIxWJH
        XMnkooe7Lg/hAcafdaIET1YJX1zm9UYp2P3j3PX/RmgA59A0LG/GHlieMI/Z5UZo6NcOITRA11wQN+dJ
        E3zRWFh7RqChb4y7l4zQAOPPW3BjMfKEIxjEEKMxT0JYgKbQNMx/qMWNxcgTrWM+sPaOMmwqIYQFcASn
        4MFHM268d3EZV7QLLD0RFqBeJYTQALffWbgiieIc9rEAJM/AebD5o3/sKzSA/56HK5IodT6agd8BUJ4G
        mrAPTGzvK24GMIAzHOKKJMLiWgnU3gyzIVbK00AT8kkIHWJb/xi8/M4XipfWUTdYuof/lO+T5GXoJIQF
        IBpxQWe4lysUD0++lIG5U2ofNXkaaFt/VGwAaqOG3giMLdRzxbQphtc/ilG8C2q7h3bkFeJKeWojoQEI
        OgUrbj61VMMRjAXJX8YfPy729Ou3n766vF2PAHQK9EXM0h2GwH0bLK3zZJUUMx6vlOF7vGDqCIDFJ32F
        0JLXJQDRFJJC0ElUefog8tQErzZI9F/xha/F+NRbocrdJ/U9ytO1qRRXkxc+xEroVqJ2opkwtQ9ApasH
        arxecAy48aemCwU8UNXmY+LVbX68Mgex9/HJk/wunjzJ6xqAoBD0AWcfiDJBU3sAqjFMdbufhTJ3BKHW
        O4gtg9clE99d28jyugdQQmFIkPq7DqFWkT9lJfHYtw1Pfl8DyJAU+2pAyOKM+OWpRfc9AMFCCJBvDEwm
        JwBBcom2jSyf1AAEyexFPp4AGZWNN1Z5EnuFnUSC8g7kjMFQgX6a/9AcMRiMJrpJeBJ7heQSkbd2BH5m
        Z2efRD/N/8gOZGZm5uTn5186d/68u6joQptozsYBe31h4fXc3NzT6JYuKWoXHVM6Jj6elZV1Itnk5ORk
        os9hZpaqVImstLRfvu0ZPGW7pBQAAAAASUVORK5CYII=
</value>
  </data>
</root>
